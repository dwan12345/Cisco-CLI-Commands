/**
 * 
 */

var project = {};
// var maxProject = 50;

function checkAllProjectFloorNumLimit() {
	let curAllProjectFloortNum = 0;

	global.projectList.forEach(prj => {
		curAllProjectFloortNum += prj.floors.length;
	});

	return curAllProjectFloortNum < global.userinfo.totalProject;
}

function maskCopyProjectIcon() {
	let curAllProjectFloortNum = 0;

	global.projectList.forEach(prj => {
		curAllProjectFloortNum += prj.floors.length;
	});

	global.projectList.forEach(prj => {
		if ((curAllProjectFloortNum + prj.floors.length) > global.userinfo.totalProject) {
			$("#projectlist .copy-" + prj.projectId).addClass("disabled");
			$("#projectlist .copy-" + prj.projectId).attr("title", "Max floormap is " + global.userinfo.totalProject + " for all projects");
		} else {
			$("#projectlist .copy" + prj.projectId).removeClass("disabled");
			$("#projectlist .copy-" + prj.projectId).attr("title", "Clone Project");
		}
	});
}

project.getProjectList = function() {
	$('html').css({
        overflow: 'auto'
      });
	showDialog('waitingPModal');
	var jsondata = {};
	doAction(loader.Request.ProjectLoad, jsondata, function(result) {
		if (result && result.success) {
			global.projectList = result.data;
			initProjectList(result.data);
		} else {
			global.projectList = [];
			initProjectList();
		}
		closeDialog('waitingPModal');
	});
};
function initProjectList(projects) {
	var projecthtml = "<div class='projectpanel row'>";
	if (projects) {
		var count = projects.length;
		for (var i = 0; i < count; i++) {
			projecthtml += initProjectCard(projects[i]);
		}
	}
	// if (projects && projects.length >= maxProject) {
	// 	$(".project_list.header .btn").addClass("disabled");

	// } else {
	// 	$(".project_list.header .btn").removeClass("disabled");

	// }
	projecthtml += "<div class='col s12 m4 l3 padd'><div class='card projectCard-add'>"
			+ "<a onclick='project.showCreateProject();'><i class='fa fa-plus-circle'></i></a></div></div>";
	projecthtml += "</div>";
	$("#projectlist").html(projecthtml);
	// if (projects && projects.length >= maxProject) {
	// 	$(".projectpanel .padd").hide();
	// 	$("#projectlist .copy").addClass("disabled");
	// } else {
	// 	$("#projectlist .copy").removeClass("disabled");
	// }
	maskCopyProjectIcon();
}
function initProjectCard(project) {
	var projecthtml = "";
	projecthtml += "<div id='card_" + project.projectId
			+ "' class='col s12 m4 l3'>";
	projecthtml += "<div  class='card projectCard'  onmouseenter='showFloorHoverDetail(this);' onmouseleave='hideFloorHoverDetail(this);'>";
	projecthtml += " <div class='card-content '>";

	var imagePath = "";
	if (project.floors && project.floors.length > 0) {
		var floor = project.floors[0];
		if (floor.floorType == 0) {
			imagePath = floor.path;
		} else {			
			imagePath = "https://" + global.googleAPIDomain
					+ "/maps/api/staticmap?center=" + floor.latitude + ","
					+ floor.longitude + "&zoom=" + floor.zoom
					+ "&size=600x400&key=" + global.googleAPIKey;
		}

	} else {
		imagePath = 'resource/image/img_floorplan_default.png';
	}

	projecthtml += " <image src='" + imagePath + "'/>";
	if (project.isFavorite == 1) {
		projecthtml += "   <a class='cardstar favorite'><i class='fa fa-star'></i></a>";
	}
	projecthtml += "  </div>";
	projecthtml += " <div class='card-content-hover ' >";
	if (project.floors && project.floors.length > 0) {
		projecthtml += " <a class='photobox'><image src='"
				+ project.floors[0].path + "'/></a>";
	} else {
		projecthtml += " <a class='photobox'><image src='resource/image/img_floorplan_default.png'/></a>";
	}
	projecthtml += "<div class='card-content-hover-view'><a id='view_"
			+ project.projectId
			+ "' class='btn btn-normal' onclick='viewProjectDetail(\""
			+ project.projectId + "\");'>VIEW PROJECT</a>";
	projecthtml += "<div id='delTip_" + project.projectId
			+ "'class='project_deleteTip'>";
	projecthtml += "<p>Delete this project?</p>";
	projecthtml += "<a  style='margin-right:16px;' class='btn btn-red' onclick='deleteProject(\""
			+ project.projectId + "\");'>YES, DELETE.</a>";
	projecthtml += "<a class='btn btn-flat' onclick='hideDeleteTip(\""
			+ project.projectId + "\");'>Cancel</a>";
	projecthtml += "<p>This action cannot be undone.</p>";
	projecthtml += "</div>";
	if (project.isFavorite == 1) {
		projecthtml += "   <a class='cardstar favorite'><i class='fa fa-star' onclick='toggleFavorite(\""
				+ project.projectId + "\")'></i></a>";
	} else {
		projecthtml += "   <a class='cardstar'><i class='fa fa-star-o' onclick='toggleFavorite(\""
				+ project.projectId + "\")'></i></a>";
	}
	projecthtml += "  </div></div>";
	projecthtml += "  <div class='card-action' >";
	projecthtml += " <p ondblclick='showRenameProject(this,\""
			+ project.projectId + "\");'>" + project.projectName + "</p>";
	projecthtml += "<input class='renameinput' style='display:none;' maxlength=16 type='text' id='input_"
			+ project.projectId
			+ "' value='"
			+ project.projectName
			+ "' onblur='renameProject(this,\""
			+ project.projectId
			+ "\");' onkeyup='monitorChangeName(this,\""
			+ project.projectId
			+ "\");'>";
	projecthtml += " <p >Last updated     " + getFormatDate(project.updateTime)
			+ "</p>";
	if (project.floors && project.floors.length > 0) {
		projecthtml += " <p style='display:none;'>" + project.floors.length
				+ "Floor Plans, " + project.apCount + " APs</p>";
	} else {
		projecthtml += " <p style='display:none;'>None floor Plans</p>";
	}
	projecthtml += " <a  class='countryspan tooltipped' data-position='right bottom' data-delay='50' data-tooltip='"
			+ project.country
			+ "' title='"
			+ project.country
			+ "'><img src='resource/Country_Flags/"
			+ project.countryCode
			+ ".svg' ></a>";
	projecthtml += " <a class='copy copy-" +  project.projectId + "' onclick='copyProject(\""
			+ project.projectId + "\");'><i class='fa fa-files-o'></i></a>";
	projecthtml += " <a class='del' onclick='showDeleteTip(\""
			+ project.projectId + "\");'><i class='fa fa-trash'></i></a>";
	projecthtml += "</div></div>";
	projecthtml += "</div>";
	return projecthtml;
}
function showFloorHoverDetail(sender) {	
	var parent = $(sender);
	parent.removeClass('projectCard').addClass('projectCard-hover');
	parent.children('.card-content').hide();
	parent.children(".card-content-hover").show();
	var action = parent.children(".card-action");
	action.find('a').show();
	action.children('p:eq(1)').hide();
	action.children('p:eq(2)').show();
}
function hideFloorHoverDetail(sender) {
	if (!sender)
		return;
	var parent = $(sender);
	var status = parent.find(".project_deleteTip")[0].style.display;
	if (status == "block") {
		return;
	}
	var inputstatus = parent.find('.renameinput')[0].style.display;
	if (inputstatus != 'none') {
		return;
	}
	var action = parent.children(".card-action");

	parent.removeClass('projectCard-hover').addClass('projectCard');
	parent.children('.card-content').show();
	parent.children(".card-content-hover").hide();
	action.find('a').hide();
	action.children('p:eq(2)').hide();
	action.children('p:eq(1)').show();
}
// 查看project详细信息
function viewProjectDetail(projectId) {
	showDialog('waitingPModal');
	global.currentFloor = null;
	var jsondata = {
		projectId : projectId
	};
	doAction(loader.Request.ProjectGetDetails, jsondata, function(result) {
		if (result && result.success) {
			var project = result.data;
			global.currentProject = project;
			getChannelByContry();
			$('#leftcountry').attr(
					"src",
					"resource/Country_Flags/"
							+ global.currentProject.countryCode + ".svg").attr(
					'title', global.currentProject.country);

			if (project.floors.length > 0) {
				toggleCard('#floor_listview', '.project_list');
				$("#rightContainer").show();
				loadFloors();
			} else {
				global.floorList = [];
				toggleCard('#floor_listview', '.project_list');

				getProjectNav();
				showaddFloorCard();
				$("#rightContainer").hide();

				if(!checkAllProjectFloorNumLimit()) {
					let MaxFloorLimitTipStr = "Max floormap is " + global.userinfo.totalProject + " for all projects";

					$(".floorplan").addClass("disabled");
					$(".floorplan.disabled a").attr("title", MaxFloorLimitTipStr);
					$(".addFloorPlus a").attr("title", MaxFloorLimitTipStr);
				} else {
					let newFloorPlanStr = "New floor plan";

					$(".floorplan.disabled").removeClass("disabled");
					$(".floorplan a").attr("title", newFloorPlanStr);
					$(".addFloorPlus a").attr("title", newFloorPlanStr);
				}

				if (global.showIcon) {
					showICONItem();
				} else {
					showListItem();
				}
				closeDialog('waitingPModal');
			}
		}else{
			closeDialog('waitingPModal');
		}
		
	});

}
// 显示删除 project提示
function showDeleteTip(projectId) {
	$("#view_" + projectId).parent().addClass('showtip');
	$("#view_" + projectId).hide();
	$("#delTip_" + projectId).show();
}
function hideDeleteTip(projectId) {
	$("#delTip_" + projectId).hide();
	$("#view_" + projectId).show();
	$("#view_" + projectId).parent().removeClass('showtip');
}
function changeProjectStatus(sender, ccode) {
	project.countryCode = ccode;
	var pname = $("#txtProject").val();
	if (pname && $.trim(pname).length > 0) {
		$('.project_create .btn-primary').removeClass("disabled");
		$(".help-inline").remove();
	} else {
		$('.project_create .btn-primary').addClass("disabled");
	}
	$("#countryInfo").html($(sender).text());
}
project.showCreateProject = function() {
	$('#txtProject').unbind('input');
	$("#txtProject").on("input", function() {
		var pname = $(this).val();
		if (pname && $.trim(pname).length > 0) {
			$(".help-inline").remove();
			var country = $(".project_country_div>a>img")[0];
			if (country) {
				$('.project_create .btn-primary').removeClass("disabled");

			} else {
				$('.project_create .btn-primary').addClass("disabled");
			}

		} else {
			$('.project_create .btn-primary').addClass("disabled");
		}
	});
	$(".help-inline").remove();
	$('.project_create .btn-primary').unbind('click');
	$('.project_create .btn-primary').addClass("disabled");
	$('#txtProject').val("");
	$("#countryInfo").val(global.userCountryCode);
	$('.project_create .btn-primary').click(function() {
		addProject();
	});
	$(".project_create").show();
	var height = $("body").height() - 60;
	$(".project_create").css("height", height);
	// toggleCard('.project_create', '.project_list');
	$('html').css({
        overflow: 'hidden'
      });
};
function addProject() {

	$('.project_create .btn-primary').addClass("disabled");
	var name = $("#txtProject").val();
	/*
	 * var country = $(".project_country_div>a>img")[0].src; var index =
	 * country.lastIndexOf('/') + 1; country = country.substring(index,
	 * country.length - 4);
	 */
	var jsondata = {
		projectName : name,
		projectId : "",
		countryCode : project.countryCode,
		userId : global.userinfo.email
	};
	doAction(loader.Request.ProjectInsert, jsondata, function(result) {
		$('.project_create .btn-primary').removeClass("disabled");
		if (result && result.success) {
			var project = result.data;
			global.projectList.push(project);
			addProjectToPanel(project);
			$(".project_create").hide();
			// if (global.projectList.length >= maxProject) {
			// 	$(".project_list.header .btn").addClass("disabled");
			// 	$(".projectpanel .padd").hide();
			// 	$("#projectList .copy").addClass("disabled");
			// }
			sortProject(global.projectSort);
			// toggleCard('.project_list', '.project_create');
			$('html').css({
		        overflow: 'auto'
		      });
		} else {
			var error = "<span for='txtProject' class='help-inline'>"
					+ message.project[result.msgCode] + "</span>";
			$('#txtProject').parent().append(error);
			$('.project_create .btn-primary').addClass("disabled");
		}
	});

}
function monitorChangeName(sender, pid) {
	var pname = $(sender).val();
	if (pname && $.trim(pname).length > 0) {
		$(".help-inline.prename").remove();

	} else {
		$(".help-inline.prename").remove();
		$("#input_" + pid).show();
		var error = "<span class='help-inline prename'>"
				+ "*Project Name can't be empty" + "</span>";
		$("#input_" + pid).after(error);
	}
}
function addProjectToPanel(project) {
	var html = initProjectCard(project);
	var pul = $(".projectpanel .padd");
	if (pul.length == 1) {
		$(html).insertBefore(pul);
		// pul.append(html);
	}
}
function showRenameProject(sender, projectId) {
	$(sender).hide();
	$("#input_" + projectId).show();
}
function renameProject(sender, pid) {
	if ($(".help-inline.prename").length > 0) {
		$(".help-inline.prename").remove();
		if (global.projectList) {
			for (var i = 0; i < global.projectList.length; i++) {
				if (global.projectList[i].projectId == pid) {
					$("#input_" + pid).hide().val(
							global.projectList[i].projectName);
					break;
				}
			}
		}
		$("#card_" + pid + " .card-action>p:first").show();
		hideFloorHoverDetail($("#card_" + pid + " .projectCard-hover")[0]);
		return;
	}
	var pname = $(sender).val();
	if (pname && $.trim(pname).length > 0) {
		$(".help-inline.prename").remove();

	} else {
		$(".help-inline.prename").remove();
		$("#input_" + pid).show();
		var error = "<span class='help-inline prename'>"
				+ "*Project Name can't be empty" + "</span>";
		$("#input_" + pid).after(error);
		return;
	}
	var jsondata = {
		projectName : pname,
		projectId : pid
	};

	doAction(
			loader.Request.ProjectUpdate,
			jsondata,
			function(data) {
				if (data && data.success) {
					var project = data.data;
					$("#input_" + project.projectId).hide();
					$("#card_" + project.projectId + " .card-action>p:first")
							.show().text(project.projectName);
					$("#card_" + project.projectId + " .card-action>p:eq(1)")
							.text(
									"Last updated     "
											+ getFormatDate(project.updateTime));
					hideFloorHoverDetail($("#card_" + project.projectId
							+ " .projectCard-hover")[0]);
					if (global.projectList) {
						for (var i = 0; i < global.projectList.length; i++) {
							if (global.projectList[i].projectId == project.projectId) {
								global.projectList[i].projectName = project.projectName;
								global.projectList[i].updateTime = project.updateTime;
								break;
							}
						}
					}
					sortProject(global.projectSort);
				} else {
					var error = "<span  class='help-inline prename'>"
							+ "*This name is already existed" + "</span>";
					$(sender).after(error);
				}
			});
}
function deleteProject(projectId) {
	var jsondata = {
		projectId : projectId,
		userId : global.userinfo.email
	};
	doAction(loader.Request.ProjectDelete, jsondata, function(result) {
		if (result && result.success) {
			$('#card_' + projectId).remove();
			if (global.projectList) {
				for (var i = 0; i < global.projectList.length; i++) {
					if (global.projectList[i].projectId == projectId) {
						global.projectList.splice(i, 1);
						break;
					}
				}
			}
			// if ((global.projectList.length < maxProject) && checkAllProjectFloorNumLimit()) {
			if (checkAllProjectFloorNumLimit()) {
				$(".project_list.header .btn").removeClass("disabled");
				$(".projectpanel .padd").show();
				$("#projectList .copy").removeClass("disabled");
			}
			maskCopyProjectIcon();
			common.resetScrollHeader();
		}
	});
	hideDeleteTip(projectId);
}
function copyProject(projectId) {
	if ($("#projectList .copy-" + projectId).hasClass("disabled")) {
		return;
	}
	$("#projectList .copy").addClass("disabled");

	var param = {
		sourceId : projectId
	};
	doActionParam(loader.Request.CopyProject, param, function(result) {
		if (result && result.success) {
			global.projectList.push(result.data);
			addProjectToPanel(result.data);
			sortProject(global.projectSort);
		}
		maskCopyProjectIcon();
	});
}
function toggleFavorite(projectId) {
	var jsondata = {
		projectId : projectId,
	};
	doAction(
			loader.Request.ToggleFavorite,
			jsondata,
			function(result) {
				if (result && result.success) {
					if (result.data.isFavorite == 1) {
						$("#card_" + projectId + " .card-content")
								.append(
										"<a class='cardstar'><i class='fa fa-star'></i></a>");
						$("#view_" + projectId).siblings(" .cardstar")
								.addClass("favorite");
						$("#view_" + projectId).siblings(" .cardstar")
								.children("i").removeClass("fa-star-o")
								.addClass("fa-star");

					} else {
						$("#card_" + projectId + " .card-content .cardstar")
								.remove();
						$("#view_" + projectId).siblings(" .cardstar")
								.removeClass("favorite");
						$("#view_" + projectId).siblings(" .cardstar")
								.children("i").removeClass("fa-star").addClass(
										"fa-star-o");
					}
					if (global.projectList) {
						for (var i = 0; i < global.projectList.length; i++) {
							if (global.projectList[i].projectId == projectId) {
								global.projectList[i].isFavorite = result.data.isFavorite;
								break;
							}
						}
						sortProject(global.projectSort);
					}
					// addProjectToPanel(result.data);
				}
			});
}
var searchProjectText="";
function searchProject(sender) {
	var name = $(sender).val();
	searchProjectText=name;
	var reg = new RegExp(name, 'i');
	var temp = [];
	for (var i = 0; i < global.projectList.length; i++) {
		if (global.projectList[i].projectName.match(reg)) {
			temp.push(global.projectList[i]);
		}
	}
	if (temp.length > 0) {
		initProjectList(temp);
	} else {
		var resulthtml = "";
		resulthtml = "<div id='project_noresult'><p class='noresult bigp'>Whoops!</p>";
		resulthtml += "<p class='noresult smallp'>No result found</p></div>";
		$("#projectlist").html(resulthtml);
	}

}
function resetProject() {
	searchProjectText="";
	initProjectList(global.projectList);
}
function sortProject(tag) {
	var compare = function(prop, mode, type) {
		return function(obj1, obj2) {
			var val1 = obj1[prop];
			var val2 = obj2[prop];
			if (type && type == 'date') {
				if (val1) {
					val1 = val1.time;
					val1 = new Date(val1);
				}
				if (val2) {
					val2 = val2.time;
					val2 = new Date(val2);
				}

				if (val1 < val2) {
					if (mode == 'DESC') {
						return -1;
					} else {
						return 1;
					}
				} else if (val1 > val2) {
					if (mode == 'DESC') {
						return 1;
					} else {
						return -1;
					}
				} else {
					return 0;
				}

			} else {

				if (val1 < val2) {
					if (mode == 'DESC') {
						return -1;
					} else {
						return 1;
					}

				} else if (val1 > val2) {
					if (mode == 'DESC') {
						return 1;
					} else {
						return -1;
					}
				} else {
					return 0;
				}
			}

		};
	};
	if (tag == 'createTime' || tag == 'updateTime') {
		var temp = global.projectList.sort(compare(tag, 'ASC', 'date'));

		initProjectList(temp);
	}
	if (tag == 'isFavorite') {
		var temp = global.projectList.sort(compare(tag, 'ASC'));

		initProjectList(temp);
	} else {
		var temp = global.projectList.sort(compare(tag, 'DESC'));

		initProjectList(temp);
	}
	global.projectSort = tag;
}
project.getProjectList();