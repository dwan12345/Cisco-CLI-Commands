/**
 * 
 */

var heatStatus = "Runnable";

/**
 * 调用后台热点算法，画热点图
 */
function showHeatMapModal(isShowing, p, param) {

	if (global.currentFloor.floorType == 0) {
		showHeatMapModalIndoor(isShowing, p, param)
	} else {
		if (global.showheatmap) {
			var param = {
				"floorId" : global.currentFloor.floorId,
				"band" : global.currentBand,
				"channel" : global.currentChannel
			};

			doActionParam(loader.Request.FloorOutdoorCoverage, param, function(
					data) {
				closeDialog("waitingPModal");
				console.log(data);
				global.coverages = data.data;
				refreshDataDraw();
			});
		} else {
			closeDialog("waitingPModal");
			global.coverage = null;
			refreshDataDraw();
		}
	}
}

function showHeatMapModalIndoor(isShowing, p, param) {

	changeMenuStatus();
	if (!global.showheatmap) {
		closeDialog("waitingPModal");
		resetHeatcontext();
		return;
	}
	if (heatStatus != "Runnable") {
		heatStatus = "Blocked";
		return;
	} else {
		heatStatus = "Running";
	}

	if (param == undefined) {
		param = "";
	}

	var bbox = maincontext.canvas.getBoundingClientRect();
	var point1 = windowToCanvas(bbox.left, bbox.top);
	var point2 = windowToCanvas(bbox.right, bbox.bottom);

	param = {
		workareaX : point1.x,
		workareaY : point1.y,
		workareaX2 : point2.x,
		workareaY2 : point2.y,
		canvasScale : global.canvasScale,
		"floorId" : global.currentFloor.floorId,
		"band" : global.currentBand,
		"channel" : global.currentChannel,
		"miniDbm" : param
	};
	resetHeatcontext();
	doActionParam(loader.Request.FloorShowHeap, param, function(data) {

		if (heatStatus == "Blocked") {
			heatStatus = "Runnable";
			showHeatMapModal();
		} else {
			closeDialog("waitingPModal");
			if (data && data.success) {

				heatStep = data.data;
				hideToolPanelMenu();
				heatArray = data.pixelList;
				heatStatus = "Runnable";
				resetHeatcontext();
			} else {
				heatStatus = "Runnable";
			}

		}
	});
	if (isShowing) {
		if (global.currentBand == "24") {
			$("#band24radio").prop("checked", true);
		} else {
			$("#band5radio").prop("checked", true);
		}
	}
}

var DATA_LEN = 102400;// 每包数据长度
var isflag = false;// 标识band2.4的数据是否接收完毕
var bandtotal = 0;// 热点的数据长度
var step = 10;
var currentPercent = 0;
var errorPixel = 0;
var isProcessing = false;
var pixels = [];
function getHeatPixel1(start, pixels1) {
	var param = {
		"floorId" : global.currentFloor.floorId,
		"band" : global.currentBand,
		"start" : start,
		"len" : DATA_LEN
	};
	doActionParam(
			"web/getPixel",
			param,
			function(data) {
				if (data && data.success) {
					if (data.pixelList != null && data.pixelList.length > 0) {
						pixels1 = pixels1.concat(data.pixelList);
						if (data.pixelList.length == DATA_LEN) {
							var percent = (parseFloat(pixels1.length) / parseFloat(bandtotal))
									.toFixed(2) * 20 + 80;
							showHeatmapPercent(percent + "%");
							getHeatPixel1(start + DATA_LEN, pixels1);
						} else {
							isflag = true;
							console.log("pixels is completed, count is "
									+ pixels1.length);
							getHeatmap(pixels1);
						}
					} else {
						isflag = true;
						console.log("pixels is zero");
						getHeatmap(pixels1);
					}
				} else {
					errorPixel += 1;
					console.log("get pixels failed,msgCode:" + data.msgCode);

					if (errorPixel < 5) {
						setTimeout(function() {
							getHeatPixel1(start, pixels1);
						}, 200);

					} else {
						isflag = true;
						console.log("pixels is zero");
						getHeatmap(pixels1);
					}
				}
			});
}
function getHeatPixelTotal() {
	pixels = [];
	if (bandtotal == 0) {
		showHeatmapPercent(100 + "%");
		getHeatmap(pixels);
	} else {
		var reCount = Math.ceil(bandtotal / DATA_LEN);
		for (var i = 0; i < reCount; i++) {
			getHeatPixel(i * DATA_LEN);
		}
	}
}

function getHeatPixel(start) {
	var param = {
		"floorId" : global.currentFloor.floorId,
		"band" : global.currentBand,
		"start" : start,
		"len" : DATA_LEN
	};
	doActionParam(
			"web/getPixel",
			param,
			function(data) {
				if (data && data.success) {
					if (data.pixelList != null && data.pixelList.length > 0) {
						pixels = pixels.concat(data.pixelList);
						if (pixels.length < bandtotal) {
							var percent = (parseFloat(pixels.length) / parseFloat(bandtotal))
									.toFixed(2) * 20 + 80;
							showHeatmapPercent(percent + "%");
							// getHeatPixel(start + DATA_LEN, pixels);
						} else {
							isflag = true;
							console.log("pixels is completed, count is "
									+ pixels.length);
							getHeatmap(pixels);
						}
					} else {
						isflag = true;
						console.log("pixels is zero");
						getHeatmap(pixels);
					}
				} else {
					errorPixel += 1;
					console.log("get pixels failed,msgCode:" + data.msgCode);

					if (errorPixel < 5) {
						setTimeout(function() {
							getHeatPixel(start);
						}, 200);

					} else {
						isflag = true;
						console.log("pixels is zero");
						getHeatmap(pixels);
					}
				}
			});
}
/**
 * 调用后台热点算法，画热点图
 */
function showHeatMapModal_old(isShowing, p, param) {

	changeMenuStatus();
	if (!global.showheatmap) {
		closeDialog("waitingPModal");
		resetHeatcontext();
		return;
	}
	currentPercent = 0;
	if (p != undefined) {
		currentPercent = p;
	}

	var heat = heatImages.get(global.currentFloor.floorId + '.'
			+ global.currentBand + '.' + global.currentChannel);
	if (heat == null) {
		if (param == undefined) {
			param = "";
		}
		param = {
			"floorId" : global.currentFloor.floorId,
			"band" : global.currentBand,
			"channel" : global.currentChannel,
			"miniDbm" : param
		};
		isProcessing = true;
		showHeatmapPercent(1 + "%");
		doActionParam(loader.Request.FloorShowHeap, param, function(data) {
			if (data && data.success) {
				isProcessing = false;
				bandtotal = data.bandpixelLen;
				step = data.data;
				isflag = true;
				showHeatmapPercent(80 + "%");
				errorPixel = 0;
				getHeatPixelTotal();

			} else {
				setTimeout(function() {
					closeDialog("waitingPModal");
				}, 200);
			}
		});
		if (!isShowing) {
			showHeatmapPercent("2%");
			errorcount = 0;
		} else {
			if (global.currentBand == "24") {
				$("#band24radio").prop("checked", true);
			} else {
				$("#band5radio").prop("checked", true);
			}
		}
		// showHeatProcessing();
	} else {
		resetHeatcontext();
		closeDialog("waitingPModal");
	}

}

var errorcount = 0;
function showHeatProcessing() {
	var jsondata = {
		"floorId" : global.currentFloor.floorId
	};
	doActionParam(
			loader.Request.FloorShowHeapProcessing,
			jsondata,
			function(data) {
				if (isProcessing) {
					if (data && data.success) {
						var weight = 0.8;
						if (currentPercent != 0) {
							weight = (100 - currentPercent - 30) / 100;
						}
						var percent = parseInt(data.advisorResult.calculateProcessing * 100);
						percent = parseInt(data.advisorResult.calculateProcessing
								* weight * 100);
						percent += currentPercent;
						showHeatmapPercent(percent + "%");

					} else {
						errorcount += 1;
					}

					setTimeout(showHeatProcessing, 1000);
				}
			});

}
function showHeatmapPercent(process) {
	$("#loadPercent").html(process);
}

function getHeatmap(array) {
	hideToolPanelMenu();
	heatImages.push(global.currentFloor.floorId + '.' + global.currentBand
			+ '.' + global.currentChannel, array);
	heatImages.push(global.currentFloor.floorId + '.' + global.currentBand
			+ '.' + global.currentChannel + '.step', step);
	resetHeatcontext();
	if (isflag) {
		showHeatmapPercent(100 + "%");
		setTimeout(function() {
			closeDialog("waitingPModal");
		}, 500);
	} else {
		showHeatmapPercent(95 + "%");
	}
}

/* 切换heatmap显示开关 */
function changeShowHeatMap(flag) {
	if (flag == "Off") {
		global.showheatmap = false;

	} else if (flag == "On") {
		global.showheatmap = true;
	}
	resetHeatMap();
	showHeatMapModal();

}